openapi: 3.0.3
info:
  title: Swagger smart home - OpenAPI 3.0
  description: |-
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
paths:
  /telemetry/{userId}:
    get:
      tags:
        - TelemetryController
      summary: Find telemetry by UserId
      description: Returns a last single telemetry
      operationId: getTelemetryByUserId
      parameters:
        - name: userId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryData'
        '400':
          description: Invalid ID supplied
        '404':
          description: Telemetry not found
  /telemetry/{userId}/{moduleId}/{operationType}:
    get:
      tags:
        - TelemetryController
      summary: Find telemetry by UserId and ModuleId
      description: Returns a last single telemetry
      operationId: getTelemetryByUserIdAndModuleIdAndOperationType
      parameters:
        - name: userId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
        - name: moduleId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
        - name: operationType
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryData'
        '400':
          description: Invalid ID supplied
        '404':
          description: Telemetry not found
  /telemetry/{userId}/{deviceId}/{moduleId}:
    get:
      tags:
        - TelemetryController
      summary: Find telemetry by UserId and deviceId and ModuleId
      description: Returns a last single telemetry
      operationId: getTelemetryByUserIdAndDeviceIdAndModuleId
      parameters:
        - name: userId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
        - name: deviceId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
        - name: moduleId
          in: path
          description: ID of telemetry to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryData'
        '400':
          description: Invalid ID supplied
        '404':
          description: Telemetry not found
  /devices/{deviceId}:
    get:
      tags:
        - DeviceController
      summary: Find device by deviceId
      description: Returns a single device
      operationId: getDeviceByDeviceId
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
  /devices/{deviceId}/commands:
    post:
      tags:
        - DeviceController
      summary: Create command for device by deviceId
      description: Returns a single device with command
      operationId: postCommandForDeviceByDeviceId
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Custom command
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found

components:
  schemas:
    TelemetryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
        deviceId:
          type: integer
          format: int64
          example: 10
        moduleId:
          type: integer
          format: int64
          example: 10
        operationType:
          type: string
          description: Operation type
          example: DONE
          enum:
            - DONE
            - FIXED
            - CANCELED
        lastUpdated:
          type: string
          format: date-time
        data:
          type: string
          example: {}
    Device:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        model:
          type: string
          example: 'VIP 1'
        serialNumber:
          type: string
          example: '#43325532'
        deviceTypeId:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
        modules:
          type: array
          items:
            $ref: '#/components/schemas/Module'
    DeviceType:
      properties:
        id:
          type: integer
          format: int64
          example: 10
        type:
          type: string
          example: 'station'
        lastUpdated:
          type: string
          format: date-time
    Module:
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'Optical interrupter'
        serialNumber:
          type: string
          example: '#433252'
        lastUpdated:
          type: string
          format: date-time
    Command:
      properties:
        command:
          type: string
          example: 'ON'